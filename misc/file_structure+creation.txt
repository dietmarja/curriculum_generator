│├── README.md                          # Main documentation file├── LICENSE                            # Creative Commons license 4.0 B.Y.├── requirements.txt                   # Python dependencies├── config.json                        # Main configuration file├── setup.py                           # Package installation script│├── dscg/                              # Main package directory│   ├── __init__.py                    # Package initialization│   ├── models.py                      # Core data models (Module, Role, Curriculum)│   ├── generator.py                   # Curriculum generator implementation│   ├── exporters/                     # Output format exporters│   │   ├── __init__.py│   │   ├── html_exporter.py           # HTML output format│   │   ├── pdf_exporter.py            # PDF output format│   │   ├── json_exporter.py           # JSON output format│   │   ├── scorm_exporter.py          # SCORM package exporter│   │   └── xapi_exporter.py           # xAPI statement generator│   ││   ├── visualization/                 # Visualization components│   │   ├── __init__.py│   │   ├── sankey.py                  # Sankey diagram generation│   │   └── prerequisites.py           # Module prerequisites graph│   ││   └── utils/                         # Utility functions│       ├── __init__.py│       ├── config.py                  # Configuration loading/handling│       ├── validation.py              # Data validation utilities│       └── learning_outcomes.py       # Learning outcome generation helpers│├── scripts/                           # Command-line scripts│   ├── generate_curriculum.py         # Main CLI script│   ├── generate_sankey.py             # Sankey diagram generation script│   └── setup_data.py                  # Initial data setup script│├── data/                              # Data files│   ├── modules.json                   # Module definitions│   ├── roles.json                     # Role definitions │   └── skills.json                    # Skills taxonomy│├── templates/                         # Output templates│   ├── html/                          # HTML output templates│   │   ├── curriculum.html            # Curriculum template│   │   └── module.html                # Module template│   └── pdf/                           # PDF output templates│       └── curriculum.html            # PDF generation template│├── web/                               # Web application│   ├── app.py                         # Flask web application│   ├── static/                        # Static assets│   │   ├── css/                       # CSS stylesheets│   │   ├── js/                        # JavaScript files│   │   └── img/                       # Images│   └── templates/                     # Web interface templates│       ├── base.html                  # Base template with common elements│       ├── index.html                 # Homepage│       ├── generator.html             # Curriculum generator interface│       ├── curriculum.html            # Curriculum view│       ├── modules.html               # Module management│       ├── roles.html                 # Role management│       └── visualization.html         # Visualization page│├── tests/                             # Unit and integration tests│   ├── __init__.py│   ├── test_models.py                 # Tests for data models│   ├── test_generator.py              # Tests for curriculum generator│   └── test_exporters.py              # Tests for exporters│└── output/                            # Generated output directory    ├── curricula/                     # Generated curricula    ├── visualizations/                # Generated visualizations     └── packages/                      # Generated SCORM/xAPI packagesTo create the specified directory structure and empty files, you can use the following shell commands. Run these commands from the root directory digital-sustainability-curriculum-generator:Copy# Create root-level filestouch README.md LICENSE requirements.txt config.json setup.py# Create the main package directory and filesmkdir -p dscg/exporters dscg/visualization dscg/utilstouch dscg/__init__.py dscg/models.py dscg/generator.pytouch dscg/exporters/__init__.py dscg/exporters/html_exporter.py dscg/exporters/pdf_exporter.pytouch dscg/exporters/json_exporter.py dscg/exporters/scorm_exporter.py dscg/exporters/xapi_exporter.pytouch dscg/visualization/__init__.py dscg/visualization/sankey.py dscg/visualization/prerequisites.pytouch dscg/utils/__init__.py dscg/utils/config.py dscg/utils/validation.py dscg/utils/learning_outcomes.py# Create the scripts directory and filesmkdir -p scriptstouch scripts/generate_curriculum.py scripts/generate_sankey.py scripts/setup_data.py# Create the data directory and filesmkdir -p datatouch data/modules.json data/roles.json data/skills.json# Create the templates directory and filesmkdir -p templates/html templates/pdftouch templates/html/curriculum.html templates/html/module.htmltouch templates/pdf/curriculum.html# Create the web directory and filesmkdir -p web/static/css web/static/js web/static/img web/templatestouch web/app.pytouch web/templates/base.html web/templates/index.html web/templates/generator.htmltouch web/templates/curriculum.html web/templates/modules.html web/templates/roles.htmltouch web/templates/visualization.html# Create the tests directory and filesmkdir -p teststouch tests/__init__.py tests/test_models.py tests/test_generator.py tests/test_exporters.py# Create the output directory and subdirectoriesmkdir -p output/curricula output/visualizations output/packages
